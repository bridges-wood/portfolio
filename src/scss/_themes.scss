@import './colors';

$bg: 'bg';
$bg-low-contrast: 'bg-lc';
$color-text-primary: 'color-text-primary';
$color-text-secondary: 'color-text-secondary';
$link-active: 'link-active';
$hover: 'hover';
$project-shadow-highlight: 'project-shadow-highlight';
$project-shadow-lowlight: 'project-shadow-lowlight';
$icon-primary: 'icon-primary';

$themes: (
	light: (
		color-text-primary: #000,
		color-text-secondary: #525252,
		link-active: #007bff,
		bg: #eaeaea,
		bg-lc: #ddd,
		project-shadow-highlight: #ffffff,
		project-shadow-lowlight: #bebebe,
		icon-primary: #24292e,
	),
	dark: (
		color-text-primary: #fff,
		color-text-secondary: #adadad,
		link-active: #007bff,
		bg: #1f1f1f,
		bg-lc: #222,
		project-shadow-highlight: #242424,
		project-shadow-lowlight: #1a1a1a,
		icon-primary: #c9d1d9,
	),
);

@mixin themed() {
	@each $theme, $map in $themes {
		.theme--#{$theme} & {
			$theme-map: () !global;
			@each $key, $submap in $map {
				$value: map-get(map-get($themes, $theme), '#{$key}');
				$theme-map: map-merge(
					$theme-map,
					(
						$key: $value,
					)
				) !global;
			}
			@content;
			$theme-map: null !global;
		}

		.theme--#{$theme}.arriving & {
			transition: all 0.5s;
		}
	}
}

@function t($key) {
	@return map-get($theme-map, $key);
}
